#!/bin/sh
#
# vault - this script manages the vault server
#
# chkconfig: 345 99 70
# description: this script manages the vault server
#
### BEGIN INIT INFO
# Provides:       vault
# Required-Start: $local_fs $network
# Required-Stop:  $local_fs $network
# Default-Start: 3 4 5
# Default-Stop:  0 1 2 6
# Short-Description: Manage the vault server
### END INIT INFO

prog="<%= @service_name %>"
user="<%= @service_user %>"
exec="/usr/local/bin/vault"
pidfile="/var/run/vault.pid"
logfile="/var/log/$prog.log"
lockfile="/var/lock/subsys/$prog"

export PATH="/usr/local/bin:/usr/bin:/bin"
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

. /etc/rc.d/init.d/functions

_start() {
    [ -x $exec ] || exit 5

    umask 077
    touch $pidfile $logfile
    chown $user $pidfile $logfile

    echo -n $"Starting vault: "
    daemon \
         --pidfile=$pidfile \
         --user=$user \
         " { $exec server -config=<%= @config_file %> -log-level=<%= @log_level %> >> $logfile 2>&1 & } ; echo \$! >| $pidfile "
     RETVAL=$?
     echo
     [ $RETVAL -eq 0 ] && touch $lockfile
     return $RETVAL
}

_stop() {
    echo -n $"Stopping vault: "
    killproc -p $pidfile $exec -TERM
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile
    return $RETVAL
}

_status() {
    status -p $pidfile -l $prog $exec
}

_reload() {
    echo -n $"Reloading vault: "
    killproc -p $pidfile $exec -HUP
    echo
}

_restart() {
    _stop
    while :
    do
        ss -pl | fgrep "((\"$prog\"," > /dev/null
        [ $? -ne 0 ] && break
        sleep 0.1
    done
    _start
}

_status_q() {
    _status >/dev/null 2>&1
}

case "$1" in
    start)
        _status_q && exit 0
        _start
        ;;
    stop)
        _status_q || exit 0
        _stop
        ;;
    restart|force-reload)
        _restart
        ;;
    reload)
        _status_q || exit 7
        _reload
        ;;
    status)
        _status
        ;;
    condrestart|try-restart)
        _status_q || exit 0
        _restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
