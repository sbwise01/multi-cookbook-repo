<%
   Chef::Log.debug('Rendering iptables template')

   if @node.run_state.key?('rblx_iptables') and @node.run_state['rblx_iptables'].key?('rules')
      Chef::Log.info("iptables rules run_state: #{@node.run_state['rblx_iptables']['rules']}")

      @node.normal['rblx_iptables']['rules'] = @node.run_state['rblx_iptables']['rules']
   end

   if @node['rblx_iptables']['rules'].empty?
     Chef::Log.warn('Rendering iptables template with empty rules list')

     # Log the exception that triggered this render (if present)
     if $!
       Chef::Log.warn($!)
     end
   end
-%>
# Generated by Chef for <%= @node['fqdn'] %>

<% if @node['rblx_iptables']['rules'].key?('nat') and not @node['rblx_iptables']['rules']['nat'].empty? -%>
*nat
:PREROUTING ACCEPT [3891:375821]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [187:14604]

    <% @node['rblx_iptables']['rules']['nat'].each_pair do | key, rule | -%>
<%= rule %>
    <% end -%>
COMMIT
<% end -%>

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT

# Non-default section
<% if @node['rblx_iptables']['rules'].key?('filter') and not @node['rblx_iptables']['rules']['filter'].empty? -%>
    <% @node['rblx_iptables']['rules']['filter'].each_pair do | key, rule | -%>
<%= rule %>
    <% end -%>
<% end -%>
# End non-default section

-A INPUT -j REJECT --reject-with icmp-port-unreachable
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
